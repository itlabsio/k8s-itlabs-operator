version: '3.6'

x-healthcheck-defaults: &healthcheck-defaults
  interval: 3s
  timeout: 3s
  retries: 100
  start_period: 20s

services:

  # Health checking external services that are listed in `links` section
  healthchecker:
    build:
      context: ..
      dockerfile: services/healtchecker/healthchecker.Dockerfile
    container_name: services-healtchecker
    networks:
      - kind
    extra_hosts:
      - "host.docker.internal:host-gateway"
    links:
      - vault     # http://vault:8200/v1/sys/health
      - keycloak  # http://keycloak:8080/health/ready
      - sentry    # http://sentry:9000/_health/
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "./services-healthcheck.sh" ]

  postgres:
    build: ./postgres
    container_name: postgres
    networks:
      - kind
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: admin
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "pg_isready" ]

  rabbit:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    networks:
      - kind
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "rabbitmq-diagnostics",  "-q", "ping" ]

  redis:
    image: redis
    container_name: redis
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - kind
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "redis-cli", "ping" ]

  vault:
    image: hashicorp/vault:1.14.0
    container_name: vault-e2e
    networks:
      - kind
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: http://0.0.0.0:8200
      VAULT_API_ADDR: http://0.0.0.0:8200
      VAULT_ADDRESS: http://0.0.0.0:8200
      VAULT_DEV_ROOT_TOKEN_ID: myroot
    cap_add:
      - IPC_LOCK

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.0
    container_name: keycloak
    networks:
      - kind
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev --health-enabled=true

  sentry:
    platform: linux/x86_64
    container_name: sentry
    image: sentry
    networks:
      - kind
    extra_hosts:
      - "host.docker.internal:host-gateway"
    links:
      - redis
      - postgres
    ports:
      - 9000:9000
    environment:
      SENTRY_SECRET_KEY: '!!!SECRET!!!'
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: postgres
      SENTRY_DB_PASSWORD: admin
      SENTRY_REDIS_HOST: redis
    depends_on:
      - redis
      - postgres

networks:
  kind:
    external: true