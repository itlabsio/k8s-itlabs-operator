name: CI

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'

jobs:
  lint:
    name: Linter
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Poetry
        run: pipx install poetry
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8.15
          cache: poetry
      - run: poetry install
      - run: poetry run pylint ./k8s-itlabs-operator

  unit-tests:
    name: Run unit-tests
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Poetry
        run: pipx install poetry
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8.15
          cache: poetry
      - run: poetry install
      - run: poetry run pytest -m unit ./k8s-itlabs-operator

  e2e-tests:
    name: Run e2e-tests
    runs-on: ubuntu-latest
    container:
      image: docker:20.10.17
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run tests
        env:
          KUBECTL: v1.23.5
          KIND: v0.14.0
          DOCKER_IMAGE: operator:${{ github.ref_name }}
          MANIFEST_FOLDER: ./manifests
          KEYCLOAK_ROOT_USERNAME: ${{ secrets.KEYCLOAK_ROOT_USERNAME }}
          KEYCLOAK_ROOT_PASSWORD: ${{ secrets.KEYCLOAK_ROOT_PASSWORD }}
          SENTRY_ORGANIZATION: ${{ secrets.SENTRY_ORGANIZATION }}
          SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN }}
        run: |
          apk add --no-cache procps
          chmod +x e2e_tests/e2e-tests.sh
          ./e2e_tests/e2e-tests.sh

  push-to-registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    needs: [lint, unit-tests, e2e-tests]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: itlabsio/k8s-itlabs-operator

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          file: ./docker/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trigger-pipeline:
    name: Trigger Gitlab pipeline
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, e2e-tests]
    steps:
      - name: Run pipeline
        env:
          URL: ${{ secrets.GITLAB_URL }}
          TOKEN: ${{ secrets.GITLAB_TOKEN }}
        run: |
          curl -X POST --fail -F token=${TOKEN} -F ref=github ${URL}
